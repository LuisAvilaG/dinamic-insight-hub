
-- =====================================================================================
-- MIGRACIÓN: Creación de la tabla de registros de importación y función auxiliar.
-- FECHA: 2025-09-13
-- AUTOR: Gemini AI Assistant
-- PROPÓSITO: Crear una tabla para registrar los resultados del proceso de importación de
--            ClickUp y una función RPC para insertar registros fácilmente desde las Edge Functions.
-- =====================================================================================

BEGIN;

-- --- 1. Crear la tabla de registros (import_logs) ---
CREATE TABLE IF NOT EXISTS be_exponential.import_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    log_level TEXT CHECK (log_level IN ('INFO', 'WARN', 'ERROR', 'SUCCESS')) NOT NULL,
    folder_name TEXT,
    list_name TEXT,
    status TEXT NOT NULL,
    details TEXT
);

-- Otorgar permisos a los roles de Supabase para que puedan usar la tabla.
GRANT USAGE ON SCHEMA be_exponential TO service_role;
GRANT ALL ON TABLE be_exponential.import_logs TO service_role;


-- --- 2. Crear la función RPC para insertar registros (create_log_entry) ---
CREATE OR REPLACE FUNCTION be_exponential.create_log_entry(p_log_level TEXT, p_status TEXT, p_details TEXT, p_folder_name TEXT DEFAULT NULL, p_list_name TEXT DEFAULT NULL)
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    INSERT INTO be_exponential.import_logs(log_level, status, details, folder_name, list_name)
    VALUES (p_log_level, p_status, p_details, p_folder_name, p_list_name);
END;
$$;

-- Otorgar permiso de ejecución a service_role para que las Edge Functions puedan llamarla.
GRANT EXECUTE ON FUNCTION be_exponential.create_log_entry(TEXT, TEXT, TEXT, TEXT, TEXT) TO service_role;


COMMIT;
